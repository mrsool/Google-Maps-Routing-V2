# frozen_string_literal: true

# The MIT License (MIT)
#
# Copyright <YEAR> <COPYRIGHT HOLDER>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!


module Google
  module Maps
    module Routing
      module V2
        # ComputeRoutes request message.
        # @!attribute [rw] origin
        #   @return [::Google::Maps::Routing::V2::Waypoint]
        #     Required. Origin waypoint.
        # @!attribute [rw] destination
        #   @return [::Google::Maps::Routing::V2::Waypoint]
        #     Required. Destination waypoint.
        # @!attribute [rw] intermediates
        #   @return [::Array<::Google::Maps::Routing::V2::Waypoint>]
        #     Optional. A set of waypoints along the route (excluding terminal points),
        #     for either stopping at or passing by. Up to 25 intermediate waypoints are
        #     supported.
        # @!attribute [rw] travel_mode
        #   @return [::Google::Maps::Routing::V2::RouteTravelMode]
        #     Optional. Specifies the mode of transportation.
        # @!attribute [rw] routing_preference
        #   @return [::Google::Maps::Routing::V2::RoutingPreference]
        #     Optional. Specifies how to compute the route. The server
        #     attempts to use the selected routing preference to compute the route. If
        #      the routing preference results in an error or an extra long latency, then
        #     an error is returned. You can specify this option only when the
        #     `travel_mode` is `DRIVE` or `TWO_WHEELER`, otherwise the request fails.
        # @!attribute [rw] polyline_quality
        #   @return [::Google::Maps::Routing::V2::PolylineQuality]
        #     Optional. Specifies your preference for the quality of the polyline.
        # @!attribute [rw] polyline_encoding
        #   @return [::Google::Maps::Routing::V2::PolylineEncoding]
        #     Optional. Specifies the preferred encoding for the polyline.
        # @!attribute [rw] departure_time
        #   @return [::Google::Protobuf::Timestamp]
        #     Optional. The departure time. If you don't set this value, then this value
        #     defaults to the time that you made the request.
        #     NOTE: You can only specify a `departure_time` in the past when
        #     {::Google::Maps::Routing::V2::RouteTravelMode RouteTravelMode} is set to
        #     `TRANSIT`.
        # @!attribute [rw] arrival_time
        #   @return [::Google::Protobuf::Timestamp]
        #     Optional. The arrival time.
        #     NOTE: Can only be set when
        #     {::Google::Maps::Routing::V2::RouteTravelMode RouteTravelMode} is set to
        #     `TRANSIT`. You can specify either departure_time or arrival_time, but not
        #     both.
        # @!attribute [rw] compute_alternative_routes
        #   @return [::Boolean]
        #     Optional. Specifies whether to calculate alternate routes in addition to
        #     the route. No alternative routes are returned for requests that have
        #     intermediate waypoints.
        # @!attribute [rw] route_modifiers
        #   @return [::Google::Maps::Routing::V2::RouteModifiers]
        #     Optional. A set of conditions to satisfy that affect the way routes are
        #     calculated.
        # @!attribute [rw] language_code
        #   @return [::String]
        #     Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
        #     information, see
        #     http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. See
        #     [Language Support](https://developers.google.com/maps/faq#languagesupport)
        #     for the list of supported languages. When you don't provide this value, the
        #     display language is inferred from the location of the route request.
        # @!attribute [rw] region_code
        #   @return [::String]
        #     Optional. The region code, specified as a ccTLD ("top-level domain")
        #     two-character value. For more information see
        #     https://en.wikipedia.org/wiki/List_of_Internet_top-level_domains#Country_code_top-level_domains
        # @!attribute [rw] units
        #   @return [::Google::Maps::Routing::V2::Units]
        #     Optional. Specifies the units of measure for the display fields. These
        #     fields include the `instruction` field in
        #     {::Google::Maps::Routing::V2::NavigationInstruction NavigationInstruction}. The
        #     units of measure used for the route, leg, step distance, and duration are
        #     not affected by this value. If you don't provide this value, then the
        #     display units are inferred from the location of the first origin.
        # @!attribute [rw] optimize_waypoint_order
        #   @return [::Boolean]
        #     Optional. If set to true, the service attempts to minimize the overall cost
        #     of the route by re-ordering the specified intermediate waypoints. The
        #     request fails if any of the intermediate waypoints is a `via` waypoint. Use
        #     `ComputeRoutesResponse.Routes.optimized_intermediate_waypoint_index` to
        #     find the new ordering.
        #     If `ComputeRoutesResponseroutes.optimized_intermediate_waypoint_index` is
        #     not requested in the `X-Goog-FieldMask` header, the request fails.
        #     If `optimize_waypoint_order` is set to false,
        #     `ComputeRoutesResponse.optimized_intermediate_waypoint_index` will be
        #     empty.
        # @!attribute [rw] requested_reference_routes
        #   @return [::Array<::Google::Maps::Routing::V2::ComputeRoutesRequest::ReferenceRoute>]
        #     Optional. Specifies what reference routes to calculate as part of the
        #     request in addition to the default route. A reference route is a route with
        #     a different route calculation objective than the default route. For example
        #     a `FUEL_EFFICIENT` reference route calculation takes into account various
        #     parameters that would generate an optimal fuel efficient route.
        # @!attribute [rw] extra_computations
        #   @return [::Array<::Google::Maps::Routing::V2::ComputeRoutesRequest::ExtraComputation>]
        #     Optional. A list of extra computations which may be used to complete the
        #     request. Note: These extra computations may return extra fields on the
        #     response. These extra fields must also be specified in the field mask to be
        #     returned in the response.
        # @!attribute [rw] traffic_model
        #   @return [::Google::Maps::Routing::V2::TrafficModel]
        #     Optional. Specifies the assumptions to use when calculating time in
        #     traffic. This setting affects the value returned in the duration field in
        #     the {::Google::Maps::Routing::V2::Route Route} and
        #     {::Google::Maps::Routing::V2::RouteLeg RouteLeg} which contains the predicted
        #     time in traffic based on historical averages.
        #     `TrafficModel` is only available for requests that have set
        #     {::Google::Maps::Routing::V2::RoutingPreference RoutingPreference} to
        #     `TRAFFIC_AWARE_OPTIMAL` and
        #     {::Google::Maps::Routing::V2::RouteTravelMode RouteTravelMode} to `DRIVE`.
        #     Defaults to `BEST_GUESS` if traffic is requested and `TrafficModel` is not
        #     specified.
        # @!attribute [rw] transit_preferences
        #   @return [::Google::Maps::Routing::V2::TransitPreferences]
        #     Optional. Specifies preferences that influence the route returned for
        #     `TRANSIT` routes. NOTE: You can only specify a `transit_preferences` when
        #     {::Google::Maps::Routing::V2::RouteTravelMode RouteTravelMode} is set to
        #     `TRANSIT`.
        class ComputeRoutesRequest
          include ::Google::Protobuf::MessageExts
          extend ::Google::Protobuf::MessageExts::ClassMethods

          # A supported reference route on the ComputeRoutesRequest.
          module ReferenceRoute
            # Not used. Requests containing this value fail.
            REFERENCE_ROUTE_UNSPECIFIED = 0

            # Fuel efficient route. Routes labeled with this value are determined to be
            # optimized for parameters such as fuel consumption.
            FUEL_EFFICIENT = 1
          end

          # Extra computations to perform while completing the request.
          module ExtraComputation
            # Not used. Requests containing this value will fail.
            EXTRA_COMPUTATION_UNSPECIFIED = 0

            # Toll information for the route(s).
            TOLLS = 1

            # Estimated fuel consumption for the route(s).
            FUEL_CONSUMPTION = 2

            # Traffic aware polylines for the route(s).
            TRAFFIC_ON_POLYLINE = 3

            # [Navigation
            # Instructions][google.maps.routing.v2.NavigationInstructions.instructions]
            # presented as a formatted HTML text string. This content
            # is meant to be read as-is. This content is for display only.
            # Do not programmatically parse it.
            HTML_FORMATTED_NAVIGATION_INSTRUCTIONS = 4
          end
        end

        # ComputeRoutes the response message.
        # @!attribute [rw] routes
        #   @return [::Array<::Google::Maps::Routing::V2::Route>]
        #     Contains an array of computed routes (up to three) when you specify
        #     compute_alternatives_routes, and contains just one route when you don't.
        #     When this array contains multiple entries, the first one is the most
        #     recommended route. If the array is empty, then it means no route could be
        #     found.
        # @!attribute [rw] fallback_info
        #   @return [::Google::Maps::Routing::V2::FallbackInfo]
        #     In some cases when the server is not able to compute the route results with
        #     all of the input preferences, it may fallback to using a different way of
        #     computation. When fallback mode is used, this field contains detailed info
        #     about the fallback response. Otherwise this field is unset.
        # @!attribute [rw] geocoding_results
        #   @return [::Google::Maps::Routing::V2::GeocodingResults]
        #     Contains geocoding response info for waypoints specified as addresses.
        class ComputeRoutesResponse
          include ::Google::Protobuf::MessageExts
          extend ::Google::Protobuf::MessageExts::ClassMethods
        end

        # ComputeRouteMatrix request message
        # @!attribute [rw] origins
        #   @return [::Array<::Google::Maps::Routing::V2::RouteMatrixOrigin>]
        #     Required. Array of origins, which determines the rows of the response
        #     matrix. Several size restrictions apply to the cardinality of origins and
        #     destinations:
        #
        #     * The number of elements (origins × destinations) must be no greater than
        #     625 in any case.
        #     * The number of elements (origins × destinations) must be no greater than
        #     100 if routing_preference is set to `TRAFFIC_AWARE_OPTIMAL`.
        #     * The number of waypoints (origins + destinations) specified as `place_id`
        #     must be no greater than 50.
        # @!attribute [rw] destinations
        #   @return [::Array<::Google::Maps::Routing::V2::RouteMatrixDestination>]
        #     Required. Array of destinations, which determines the columns of the
        #     response matrix.
        # @!attribute [rw] travel_mode
        #   @return [::Google::Maps::Routing::V2::RouteTravelMode]
        #     Optional. Specifies the mode of transportation.
        # @!attribute [rw] routing_preference
        #   @return [::Google::Maps::Routing::V2::RoutingPreference]
        #     Optional. Specifies how to compute the route. The server attempts to use
        #     the selected routing preference to compute the route. If the routing
        #     preference results in an error or an extra long latency, an error is
        #     returned. You can specify this option only when the `travel_mode` is
        #     `DRIVE` or `TWO_WHEELER`, otherwise the request fails.
        # @!attribute [rw] departure_time
        #   @return [::Google::Protobuf::Timestamp]
        #     Optional. The departure time. If you don't set this value, then this value
        #     defaults to the time that you made the request.
        #     NOTE: You can only specify a `departure_time` in the past when
        #     {::Google::Maps::Routing::V2::RouteTravelMode RouteTravelMode} is set to
        #     `TRANSIT`.
        # @!attribute [rw] arrival_time
        #   @return [::Google::Protobuf::Timestamp]
        #     Optional. The arrival time.
        #     NOTE: Can only be set when
        #     {::Google::Maps::Routing::V2::RouteTravelMode RouteTravelMode} is set to
        #     `TRANSIT`. You can specify either departure_time or arrival_time, but not
        #     both.
        # @!attribute [rw] language_code
        #   @return [::String]
        #     Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
        #     information, see
        #     http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. See
        #     [Language Support](https://developers.google.com/maps/faq#languagesupport)
        #     for the list of supported languages. When you don't provide this value, the
        #     display language is inferred from the location of the first origin.
        # @!attribute [rw] region_code
        #   @return [::String]
        #     Optional. The region code, specified as a ccTLD ("top-level domain")
        #     two-character value. For more information see
        #     https://en.wikipedia.org/wiki/List_of_Internet_top-level_domains#Country_code_top-level_domains
        # @!attribute [rw] extra_computations
        #   @return [::Array<::Google::Maps::Routing::V2::ComputeRouteMatrixRequest::ExtraComputation>]
        #     Optional. A list of extra computations which may be used to complete the
        #     request. Note: These extra computations may return extra fields on the
        #     response. These extra fields must also be specified in the field mask to be
        #     returned in the response.
        # @!attribute [rw] traffic_model
        #   @return [::Google::Maps::Routing::V2::TrafficModel]
        #     Optional. Specifies the assumptions to use when calculating time in
        #     traffic. This setting affects the value returned in the duration field in
        #     the {::Google::Maps::Routing::V2::RouteMatrixElement RouteMatrixElement} which
        #     contains the predicted time in traffic based on historical averages.
        #     {::Google::Maps::Routing::V2::RoutingPreference RoutingPreference} to
        #     `TRAFFIC_AWARE_OPTIMAL` and
        #     {::Google::Maps::Routing::V2::RouteTravelMode RouteTravelMode} to `DRIVE`.
        #     Defaults to `BEST_GUESS` if traffic is requested and `TrafficModel` is not
        #     specified.
        # @!attribute [rw] transit_preferences
        #   @return [::Google::Maps::Routing::V2::TransitPreferences]
        #     Optional. Specifies preferences that influence the route returned for
        #     `TRANSIT` routes. NOTE: You can only specify a `transit_preferences` when
        #     {::Google::Maps::Routing::V2::RouteTravelMode RouteTravelMode} is set to
        #     `TRANSIT`.
        class ComputeRouteMatrixRequest
          include ::Google::Protobuf::MessageExts
          extend ::Google::Protobuf::MessageExts::ClassMethods

          # Extra computations to perform while completing the request.
          module ExtraComputation
            # Not used. Requests containing this value will fail.
            EXTRA_COMPUTATION_UNSPECIFIED = 0

            # Toll information for the matrix element(s).
            TOLLS = 1
          end
        end

        # A single origin for ComputeRouteMatrixRequest
        # @!attribute [rw] waypoint
        #   @return [::Google::Maps::Routing::V2::Waypoint]
        #     Required. Origin waypoint
        # @!attribute [rw] route_modifiers
        #   @return [::Google::Maps::Routing::V2::RouteModifiers]
        #     Optional. Modifiers for every route that takes this as the origin
        class RouteMatrixOrigin
          include ::Google::Protobuf::MessageExts
          extend ::Google::Protobuf::MessageExts::ClassMethods
        end

        # A single destination for ComputeRouteMatrixRequest
        # @!attribute [rw] waypoint
        #   @return [::Google::Maps::Routing::V2::Waypoint]
        #     Required. Destination waypoint
        class RouteMatrixDestination
          include ::Google::Protobuf::MessageExts
          extend ::Google::Protobuf::MessageExts::ClassMethods
        end

        # Contains route information computed for an origin/destination pair in the
        # ComputeRouteMatrix API. This proto can be streamed to the client.
        # @!attribute [rw] origin_index
        #   @return [::Integer]
        #     Zero-based index of the origin in the request.
        # @!attribute [rw] destination_index
        #   @return [::Integer]
        #     Zero-based index of the destination in the request.
        # @!attribute [rw] status
        #   @return [::Google::Rpc::Status]
        #     Error status code for this element.
        # @!attribute [rw] condition
        #   @return [::Google::Maps::Routing::V2::RouteMatrixElementCondition]
        #     Indicates whether the route was found or not. Independent of status.
        # @!attribute [rw] distance_meters
        #   @return [::Integer]
        #     The travel distance of the route, in meters.
        # @!attribute [rw] duration
        #   @return [::Google::Protobuf::Duration]
        #     The length of time needed to navigate the route. If you set the
        #     {::Google::Maps::Routing::V2::ComputeRouteMatrixRequest#routing_preference routing_preference}
        #     to `TRAFFIC_UNAWARE`, then this value is the same as `static_duration`. If
        #     you set the `routing_preference` to either `TRAFFIC_AWARE` or
        #     `TRAFFIC_AWARE_OPTIMAL`, then this value is calculated taking traffic
        #     conditions into account.
        # @!attribute [rw] static_duration
        #   @return [::Google::Protobuf::Duration]
        #     The duration of traveling through the route without taking traffic
        #     conditions into consideration.
        # @!attribute [rw] travel_advisory
        #   @return [::Google::Maps::Routing::V2::RouteTravelAdvisory]
        #     Additional information about the route. For example: restriction
        #     information and toll information
        # @!attribute [rw] fallback_info
        #   @return [::Google::Maps::Routing::V2::FallbackInfo]
        #     In some cases when the server is not able to compute the route with the
        #     given preferences for this particular origin/destination pair, it may
        #     fall back to using a different mode of computation. When fallback mode is
        #     used, this field contains detailed information about the fallback response.
        #     Otherwise this field is unset.
        # @!attribute [rw] localized_values
        #   @return [::Google::Maps::Routing::V2::RouteMatrixElement::LocalizedValues]
        #     Text representations of properties of the `RouteMatrixElement`.
        class RouteMatrixElement
          include ::Google::Protobuf::MessageExts
          extend ::Google::Protobuf::MessageExts::ClassMethods

          # Text representations of certain properties.
          # @!attribute [rw] distance
          #   @return [::Google::Type::LocalizedText]
          #     Travel distance represented in text form.
          # @!attribute [rw] duration
          #   @return [::Google::Type::LocalizedText]
          #     Duration represented in text form taking traffic conditions into
          #     consideration. Note: If traffic information was not requested, this value
          #     is the same value as static_duration.
          # @!attribute [rw] static_duration
          #   @return [::Google::Type::LocalizedText]
          #     Duration represented in text form without taking traffic conditions into
          #     consideration.
          # @!attribute [rw] transit_fare
          #   @return [::Google::Type::LocalizedText]
          #     Transit fare represented in text form.
          class LocalizedValues
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods
          end
        end

        # The condition of the route being returned.
        module RouteMatrixElementCondition
          # Only used when the `status` of the element is not OK.
          ROUTE_MATRIX_ELEMENT_CONDITION_UNSPECIFIED = 0

          # A route was found, and the corresponding information was filled out for the
          # element.
          ROUTE_EXISTS = 1

          # No route could be found. Fields containing route information, such as
          # `distance_meters` or `duration`, will not be filled out in the element.
          ROUTE_NOT_FOUND = 2
        end
      end
    end
  end
end
