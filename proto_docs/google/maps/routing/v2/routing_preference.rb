# frozen_string_literal: true

# The MIT License (MIT)
#
# Copyright <YEAR> <COPYRIGHT HOLDER>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!


module Google
  module Maps
    module Routing
      module V2
        # A set of values that specify factors to take into consideration when
        # calculating the route.
        module RoutingPreference
          # No routing preference specified. Default to `TRAFFIC_UNAWARE`.
          ROUTING_PREFERENCE_UNSPECIFIED = 0

          # Computes routes without taking live traffic conditions into consideration.
          # Suitable when traffic conditions don't matter or are not applicable.
          # Using this value produces the lowest latency.
          # Note: For {::Google::Maps::Routing::V2::RouteTravelMode RouteTravelMode} `DRIVE`
          # and `TWO_WHEELER` choice of route and duration are based on road network
          # and average time-independent traffic conditions. Results for a given
          # request may vary over time due to changes in the road network, updated
          # average traffic conditions, and the distributed nature of the service.
          # Results may also vary between nearly-equivalent routes at any time or
          # frequency.
          TRAFFIC_UNAWARE = 1

          # Calculates routes taking live traffic conditions into consideration.
          # In contrast to `TRAFFIC_AWARE_OPTIMAL`, some optimizations are applied to
          # significantly reduce latency.
          TRAFFIC_AWARE = 2

          # Calculates the routes taking live traffic conditions into consideration,
          # without applying most performance optimizations. Using this value produces
          # the highest latency.
          TRAFFIC_AWARE_OPTIMAL = 3
        end
      end
    end
  end
end
